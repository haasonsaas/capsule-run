name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build Release
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: capsule-run-linux-x86_64
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest  
            name: capsule-run-linux-x86_64-musl
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            name: capsule-run-linux-aarch64
          - target: x86_64-apple-darwin
            os: macos-latest
            name: capsule-run-macos-x86_64
          - target: aarch64-apple-darwin
            os: macos-latest
            name: capsule-run-macos-aarch64
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
          
      - name: Install system dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libseccomp-dev
          if [[ "${{ matrix.target }}" == "x86_64-unknown-linux-musl" ]]; then
            sudo apt-get install -y musl-tools
          fi
          if [[ "${{ matrix.target }}" == "aarch64-unknown-linux-gnu" ]]; then
            sudo apt-get install -y gcc-aarch64-linux-gnu
          fi
          
      - name: Build
        run: |
          if [[ "${{ matrix.target }}" == *"linux"* ]]; then
            cargo build --release --target ${{ matrix.target }}
          else
            cargo build --release --target ${{ matrix.target }} --no-default-features
          fi
        env:
          RUSTFLAGS: '-C target-feature=+crt-static'
          
      - name: Package
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            tar czvf ../../../${{ matrix.name }}.tar.gz capsule-run
          else
            tar czvf ../../../${{ matrix.name }}.tar.gz capsule-run
          fi
          cd -
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}.tar.gz

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            */capsule-run-*.tar.gz
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}